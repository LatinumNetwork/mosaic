name: New Version Notification

on:
  push:
    branches: ['test-branch', 'BRAN-393-when-releasing-mosaic-show-what-tickets-got-merged-with-a-release-log']
  workflow_dispatch:

jobs:
  compare_tags:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get current and previous tags
        id: get_tags
        run: |
          current_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          previous_tag=$(git describe --tags --abbrev=0 `git rev-list --tags --skip=1 --max-count=1`)
          current_commit=$(git rev-list -n 1 $current_tag)
          previous_commit=$(git rev-list -n 1 $previous_tag)
          echo "current_tag=$current_tag" >> $GITHUB_ENV
          echo "current_commit=$current_commit" >> $GITHUB_ENV
          echo "previous_commit=$previous_commit" >> $GITHUB_ENV

      - name: Get merged pull requests
        id: merged_prs
        uses: VanOns/get-merged-pull-requests-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          repo: ${{ github.repository }}
          current_tag: ${{ env.current_commit }}
          previous_tag: ${{ env.previous_commit }}
          return_type: 'all'

      - name: Format PR list
        run: |
          pr_list=$(echo "${{ steps.merged_prs.outputs.pull_requests }}" | jq -r '.[] | "- <" + .html_url + "|PR #" + (.number|tostring) + ">"')
          echo "pr_list=$pr_list" >> $GITHUB_ENV

          echo "pr_list=$pr_list" >> $GITHUB_ENV
            if [ -z "$pr_list" ]; then
            echo "header=" >> $GITHUB_ENV          
          else
            echo "header=Merged PRs:" >> $GITHUB_ENV
          fi

      - name: Send Slack Notification
        uses: slackapi/slack-github-action@v1
        with:
          channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          slack-message: |
            <https://646227b52910551bc013d3ef-rplhylrpxw.chromatic.com|Successfully released mosaic version ${{ env. current_tag }} :books:.>
            ${{ env.header }}
            ${{ env.pr_list }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}